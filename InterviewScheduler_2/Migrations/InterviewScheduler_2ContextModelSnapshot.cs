// <auto-generated />
using System;
using InterviewScheduler_2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterviewScheduler_2.Migrations
{
    [DbContext(typeof(InterviewScheduler_2Context))]
    partial class InterviewScheduler_2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InterviewScheduler_2.Models.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("50fbb8ea-dbda-42e8-897b-3458debb5a55"),
                            CompanyAddress = "Test Address1",
                            CompanyCity = "TestCity1",
                            CompanyName = "TestCompany1"
                        },
                        new
                        {
                            CompanyId = new Guid("89a8e730-9275-40a3-8d45-25c3639ffd21"),
                            CompanyAddress = "Test Address2",
                            CompanyCity = "TestCity2",
                            CompanyName = "TestCompany1"
                        });
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.Round", b =>
                {
                    b.Property<int>("RoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoundId"));

                    b.Property<string>("Round_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoundId");

                    b.ToTable("Round");
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.Scheduler", b =>
                {
                    b.Property<int>("SchedulerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchedulerId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AppliedPost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoundId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Scheduled_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SchedulerId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoundId");

                    b.HasIndex("UserId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("User_PhoneNumber")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.Scheduler", b =>
                {
                    b.HasOne("InterviewScheduler_2.Models.Company", "Company")
                        .WithMany("schedulers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterviewScheduler_2.Models.Round", "round")
                        .WithMany("schedulers")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterviewScheduler_2.Models.User", "User")
                        .WithMany("schedulers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");

                    b.Navigation("round");
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.Company", b =>
                {
                    b.Navigation("schedulers");
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.Round", b =>
                {
                    b.Navigation("schedulers");
                });

            modelBuilder.Entity("InterviewScheduler_2.Models.User", b =>
                {
                    b.Navigation("schedulers");
                });
#pragma warning restore 612, 618
        }
    }
}
